
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/danish.dtsi"

/ {
    macros {
        uni_ae: uni_ae {
            label = "uni_ae";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N1 &kp KP_N4 &kp KP_N5>
                , <&macro_release &kp LALT>
                ;
        };
    };

    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
    &kp EQUAL   &kp N1     &kp N2     &kp N3    &kp N4     &kp N5              &tog 1                                                                &mo 3   &kp N6  &kp N7     &kp N8    &kp N9    &kp N0    &kp CAPS
    &kp TAB     &kp SQT    &kp COMMA  &kp DOT   &kp P      &kp Y               &none                                                                 &none   &kp F   &kp G      &kp C     &kp R     &kp L     &kp BSLH
    &kp ESC     &kp A      &kp O      &kp E     &kp U      &kp I               &none      &kp LCTRL  &kp LALT   &none   &none  &kp LGUI   &kp RCTRL  &none   &kp D   &kp H      &kp T     &kp N     &kp S     &kp MINUS
    &kp LSHFT   &kp SEMI   &kp Q      &kp J     &kp K      &kp X               &none      &none      &mo 6   &none   &none  &kp PG_UP  &none      &none   &kp B   &kp M      &kp W     &kp V     &kp Z     &kp RSHFT
    &mo 4       &kp GRAVE  &kp CAPS   &kp LEFT  &kp RIGHT                      &kp BSPC   &kp DEL    &mo 1                     &mo 5  &kp ENTER  &kp SPACE           &kp UP     &kp DOWN  &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        layer_symbols {
            bindings = <
 &kp EQUAL &kp N1     &kp N2     &kp N3     &kp N4  &kp N5                  &trans                                                                 &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
 &trans    &kp DQT    &kp UNDER  &kp LBKT   &kp RBKT   &kp CARET            &none                                                   &none  &kp EXCL  &kp LT  &kp GT   &kp EQUAL   &kp AMPS   &trans
 &trans    &kp FSLH   &kp DQT    &kp LBRC   &kp RBRC   &kp STAR             &none   &trans  &trans   &none   &none  &trans  &trans   &none  &kp QMARK  &kp LPAR   &kp RPAR   &kp SQT   &kp COLON   &trans
 &trans    &kp HASH   &kp DOLLAR &kp PIPE   &kp TILDE  &kp GRAVE            &none   &none  &trans   &none   &none  &trans   &none   &none  &kp PLUS  &kp PERCENT  &kp BSLH   &kp AT   &trans   &trans
 &trans    &trans  &trans     &trans     &trans                          &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7   &kp F8     &kp F9      &kp F10     &kp F11     &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans            &none                                                    &none  &trans   &kp KP_N7  &kp KP_N8   &kp KP_N9   &trans      &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &none   &trans  &trans   &none   &none  &trans  &trans   &none  &trans   &kp KP_N4  &kp KP_N5   &kp KP_N6   &trans      &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &none   &none   &trans   &none   &none  &trans   &none   &none  &trans   &kp KP_N1  &kp KP_N2   &kp KP_N3   &trans      &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans   &trans          &trans     &trans      &kp KP_N0   &trans      &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none   &none   &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_CTRL_NUM {
            bindings = <
 &trans         &trans    &trans     &trans     &trans     &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans         &trans    &trans     &trans     &trans     &trans            &trans                                                  &trans  &trans  &kp N7  &kp N8  &kp N9  &dk_aa  &trans
 &trans         &kp LC(A) &kp LC(S)  &trans     &kp LC(F)  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp N4  &kp N5  &kp N6  &dk_ae  &dk_oe
 &trans         &kp LC(Z) &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
 &trans         &trans  &trans  &trans  &trans                               &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &kp N0  &trans  &trans
            >;
        };

    layer_movement {
            bindings = <
 &trans         &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans     &trans     &trans     &trans  &trans  &trans
 &trans         &trans  &kp PG_UP  &kp UP  &kp PG_DN  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans         &kp HOME  &kp LEFT  &kp DOWN  &kp RIGHT  &kp END            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans         &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans         &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans             &trans     &trans  &trans  &trans  &trans
            >;
        };

        layer_macros {
            bindings = <
 &trans         &trans    &trans     &trans     &trans     &trans            &trans                                                  &trans         &trans  &trans  &trans  &trans  &trans  &trans
 &trans         &trans    &trans     &trans     &trans     &trans            &trans                                                  &trans         &trans  &trans  &trans  &trans  &dk_aa  &trans
 &trans         &trans    &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans  &trans  &trans  &trans  &dk_ae  &dk_oe
 &trans         &trans    &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans  &trans  &trans  &trans  &trans  &trans
 &trans         &trans    &trans     &trans     &trans                               &trans  &trans  &trans          &trans  &trans  &trans                 &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};